in
popr RAX
in
popr RBX
in
popr RCX


pushr RAX
push 0
je :2

pushr RBX
pushr RBX
mul
push 4
pushr RAX
mul
pushr RCX
mul
sub
popr RDX

pushr RDX
push 0
jb :2

pushr RDX
push 0
je :3

push 2
out

pushr RBX
push -1
mul
pushr RDX
sqrt
add
push 2
pushr RAX
mul
div
out

pushr RBX
push -1
mul
pushr RDX
sqrt
sub
push 2
pushr RAX
mul
div
out
jmp :4

push 1
out

:3
pushr RBX
push -1
mul
push 2
pushr RAX
mul
div
out
jmp :4

:2
push 0
out
jmp :4

:1
push -1
out

:4
hlt

